{"version":3,"sources":["pages/Configurações.jsx","pages/Login.jsx","redux/actions/index.js","functions/gameFunctions.js","components/QuizHeader.jsx","pages/Game.jsx","pages/Feedback.jsx","pages/Ranking.jsx","App.js","redux/reducer/userReducer.js","redux/reducer/index.js","redux/store/index.js","index.js"],"names":["Configurações","data-testid","React","Component","Login","handleInputChange","target","id","setState","value","activeButton","state","email","name","isDisabled","handleClickPlayButton","a","props","history","setUserInfo","fetch","response","json","data","localStorage","setItem","token","push","console","log","this","className","htmlFor","type","placeholder","autoComplete","onChange","disabled","onClick","connect","dispatch","userInfo","setUserInfoAction","createImageSrc","hash","md5","toString","getBarElement","optParents","parentElement","firstChild","QuizHeader","score","src","alt","player","gravatarEmail","Game","setAsIncorrect","optionsParent","myRef","current","optElement","children","find","option","changeOptionsColors","callingAPI","myItem","getItem","results","length","removeItem","resultAPI","createRandomOptions","initializeTimer","intervalId","setInterval","timer","classList","add","createIncorrectOption","answer","i","key","e","he","decode","createCorrectOption","questionNumber","shuffledOptions","options","incorrect_answers","forEach","correct_answer","array","j","Math","floor","random","temp","shuffleArray","setButtonsToDefault","clearInterval","parent","optParent","opt","disableButton","isCorrect","updateScore","setScore","difficulty","setNextQuestion","remove","bar","offsetHeight","restartAnimation","removeAnimation","createRef","category","question","ref","setScoreAction","Feedback","handleRedirectTo","route","clearState","myObj","picture","dataArr","JSON","parse","stringify","assertions","Ranking","getLocalStorage","sortedInfos","sort","b","playerInfos","HandleClickBackToLogin","map","App","exact","path","component","INITIAL_STATE","playerReducer","action","rootReducer","combineReducers","store","createStore","composeWithDevTools","window","Cypress","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.93c56b19.chunk.js","sourcesContent":["import React from 'react';\n\nclass Configurações extends React.Component {\n  render() {\n    return (\n      <div>\n        <h1 data-testid=\"settings-title\">\n          Configurações\n        </h1>\n      </div>\n    );\n  }\n}\nexport default Configurações;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport { setUserInfo as setUserInfoAction } from '../redux/actions';\n\nimport '../styles/login.css';\n\nclass Login extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      email: '',\n      name: '',\n      isDisabled: true,\n    };\n  }\n\n  handleInputChange = ({ target }) => {\n    const { id } = target;\n    this.setState({\n      [id]: target.value,\n    }, this.activeButton);\n  }\n\n  activeButton = () => {\n    const { email, name } = this.state;\n\n    if (email !== '' && name !== '') {\n      this.setState({ isDisabled: false });\n    } else {\n      this.setState({ isDisabled: true });\n    }\n  }\n\n  handleClickPlayButton = async (name, email) => {\n    const { history, setUserInfo } = this.props;\n    const ENDPOINT = 'https://opentdb.com/api_token.php?command=request';\n    try {\n      const response = await fetch(ENDPOINT);\n      const data = await response.json();\n      const key = 'token';\n      localStorage.setItem(key, data.token);\n      setUserInfo({ name, email });\n      history.push('/game');\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  render() {\n    const { email, name, isDisabled } = this.state;\n    const { history } = this.props;\n\n    return (\n      <div className=\"pageContainer\">\n        <h1 className=\"title\">Quiz!?</h1>\n        <div className=\"infoContainer\">\n          <div className=\"loginContainer\">\n            <label htmlFor=\"email\">\n              <input\n                type=\"email\"\n                id=\"email\"\n                className=\"input\"\n                data-testid=\"input-gravatar-email\"\n                placeholder=\"Email\"\n                autoComplete=\"off\"\n                value={ email }\n                onChange={ this.handleInputChange }\n              />\n            </label>\n            <label htmlFor=\"name\">\n              <input\n                type=\"text\"\n                id=\"name\"\n                className=\"input\"\n                data-testid=\"input-player-name\"\n                placeholder=\"Nome\"\n                autoComplete=\"off\"\n                value={ name }\n                onChange={ this.handleInputChange }\n              />\n            </label>\n          </div>\n          <div className=\"buttonContainer\">\n            <button\n              type=\"button\"\n              data-testid=\"btn-play\"\n              disabled={ isDisabled }\n              onClick={ () => this.handleClickPlayButton(name, email) }\n            >\n              Play\n            </button>\n            <button\n              type=\"button\"\n              data-testid=\"btn-settings\"\n              onClick={ () => history.push('/Configurações') }\n            >\n              Configurações\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nLogin.propTypes = {\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired,\n  }),\n  setUserInfo: PropTypes.func,\n}.isRequired;\n\nconst mapDispatchToProps = (dispatch) => ({\n  setUserInfo: (userInfo) => dispatch(setUserInfoAction(userInfo)),\n});\n\nexport default connect(null, mapDispatchToProps)(Login);\n","export const SET_USER_INFO = 'SET_USER_INFO';\nexport const SET_SCORE = 'SET_SCORE';\nexport const CLEAR_PLAYER = 'CLEAR_PLAYER';\n\nexport const setUserInfo = (userInfo) => ({\n  type: SET_USER_INFO,\n  userInfo,\n});\n\nexport const setScore = (score) => ({\n  type: SET_SCORE,\n  score,\n});\n\nexport const clearPlayer = () => ({\n  type: CLEAR_PLAYER,\n});\n","import md5 from 'crypto-js/md5';\n\nexport const shuffleArray = (array) => {\n  for (let i = array.length - 1; i > 0; i -= 1) {\n    const j = Math.floor(Math.random() * (i + 1));\n    const temp = array[i];\n    array[i] = array[j];\n    array[j] = temp;\n  }\n  return array;\n};\n\nexport const createImageSrc = (email) => {\n  const hash = md5(email).toString();\n  return `https://www.gravatar.com/avatar/${hash}`;\n};\n\nexport const disableButton = (parent) => {\n  const options = [...parent.children];\n  options.forEach((opt) => {\n    opt.disabled = true;\n  });\n};\n\nconst getBarElement = (optParents) => {\n  const questionContainer = optParents.parentElement;\n  const centralize = questionContainer.parentElement;\n  const bar = centralize.firstChild;\n  return bar;\n};\n\nconst restartAnimation = (bar) => {\n  const removing = bar.offsetHeight;\n  return removing;\n};\n\nexport const setAnimation = (optParents) => {\n  const bar = getBarElement(optParents);\n  bar.classList.add('bar-animation');\n};\n\nexport const stopAnimation = (optParents) => {\n  const bar = getBarElement(optParents);\n  bar.classList.add('stop-animation');\n};\n\nexport const removeAnimation = (optParents) => {\n  const bar = getBarElement(optParents);\n  bar.classList.remove('bar-animation');\n  bar.classList.remove('stop-animation');\n  restartAnimation(bar);\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport { createImageSrc } from '../functions/gameFunctions';\nimport '../styles/quizHeader.css';\n\nclass QuizHeader extends React.Component {\n  render() {\n    const { name, score, email } = this.props;\n\n    return (\n      <div className=\"game-header\">\n        <img\n          src={ createImageSrc(email) }\n          alt=\"user\"\n          data-testid=\"header-profile-picture\"\n        />\n        <p data-testid=\"header-player-name\" className=\"player-name\">{ name }</p>\n        <div className=\"header-score-container\">\n          <p data-testid=\"header-score\">{ score }</p>\n        </div>\n      </div>\n    );\n  }\n}\n\nQuizHeader.propTypes = {\n  name: PropTypes.string,\n  email: PropTypes.string,\n  score: PropTypes.number,\n}.isRequired;\n\nconst mapStateToProps = (state) => ({\n  name: state.player.name,\n  email: state.player.gravatarEmail,\n  score: state.player.score,\n});\n\nexport default connect(mapStateToProps)(QuizHeader);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport he from 'he';\n\nimport { setScore as setScoreAction } from '../redux/actions';\nimport {\n  shuffleArray, disableButton, setAnimation, stopAnimation, removeAnimation,\n} from '../functions/gameFunctions';\nimport QuizHeader from '../components/QuizHeader';\nimport '../styles/game.css';\n\nclass Game extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      resultAPI: [],\n      questionNumber: 0,\n      timer: 30,\n      shuffledOptions: [],\n      isDisabled: false,\n      intervalId: '',\n    };\n  }\n\n  componentDidMount() {\n    this.callingAPI();\n    this.myRef = React.createRef();\n  }\n\n  componentDidUpdate() {\n    const { timer, isDisabled } = this.state;\n    // é necessário usar os isDisabled, para não ficar em loop infinito\n    if (timer === 0 && isDisabled === false) {\n      this.setAsIncorrect();\n    }\n  }\n\n  setAsIncorrect = () => {\n    const optionsParent = this.myRef.current;\n    const optionsArray = [...optionsParent.children];\n    const optElement = optionsArray.find((option) => option.name === 'incorrect');\n    this.changeOptionsColors(optElement);\n  }\n\n  callingAPI = async () => {\n    const myItem = localStorage.getItem('token');\n    const response = await fetch(`https://opentdb.com/api.php?amount=5&token=${myItem}`);\n    const data = await response.json();\n    if (data.results.length === 0) {\n      const { history } = this.props;\n      localStorage.removeItem('token');\n      history.push('/');\n    } else {\n      this.setState({ resultAPI: data.results }, this.createRandomOptions);\n    }\n  }\n\n  initializeTimer = () => {\n    const optionsParent = this.myRef.current;\n    const ONE_SECOND = 1000;\n    const intervalId = setInterval(() => {\n      const { timer } = this.state;\n      this.setState({ timer: timer - 1 });\n    }, ONE_SECOND);\n    this.setState({ intervalId });\n    setAnimation(optionsParent);\n  }\n\n  createIncorrectOption = (answer, i) => {\n    const incorrectOpt = (\n      <button\n        type=\"button\"\n        data-testid={ `wrong-answer-${i}` }\n        key={ i }\n        onClick={ (e) => this.changeOptionsColors(e.target) }\n        name=\"incorrect\"\n        className=\"answer-button\"\n        disabled={ false }\n      >\n        {/* a biblioteca 'he' serve para transformar simbolos: &quot, em html normal */}\n        {he.decode(answer)}\n      </button>\n    );\n    return incorrectOpt;\n  }\n\n  createCorrectOption = (answer) => {\n    const correctOpt = (\n      <button\n        type=\"button\"\n        key={ 4 }\n        data-testid=\"correct-answer\"\n        name=\"correct\"\n        className=\"answer-button\"\n        onClick={ (e) => this.changeOptionsColors(e.target) }\n        disabled={ false }\n      >\n        {he.decode(answer)}\n      </button>\n    );\n    return correctOpt;\n  }\n\n  createRandomOptions = () => {\n    const { resultAPI, questionNumber } = this.state;\n    let { shuffledOptions } = this.state;\n    const options = [];\n\n    resultAPI[questionNumber].incorrect_answers.forEach((answer, i) => {\n      options.push(this.createIncorrectOption(answer, i));\n    });\n\n    const answer = resultAPI[questionNumber].correct_answer;\n    options.push(this.createCorrectOption(answer));\n\n    shuffledOptions = shuffleArray(options);\n    this.setState({ shuffledOptions }, () => {\n      this.setButtonsToDefault();\n      this.initializeTimer();\n    });\n  }\n\n  changeOptionsColors = (target) => {\n    const { intervalId } = this.state;\n    clearInterval(intervalId);\n    const parent = target.parentElement;\n    const optionsArray = [...parent.children];\n    optionsArray.forEach((option) => {\n      if (option.name === 'incorrect') {\n        option.classList.add('red-border');\n      } else {\n        option.classList.add('green-border');\n      }\n    });\n    const optParent = this.myRef.current;\n    this.setState({ isDisabled: true }, () => disableButton(optParent));\n    const isCorrect = target.name === 'correct';\n    this.updateScore(isCorrect);\n    stopAnimation(optParent);\n  }\n\n  updateScore = (isCorrect) => {\n    if (isCorrect) {\n      const { timer, resultAPI, questionNumber } = this.state;\n      const { setScore } = this.props;\n      let { difficulty } = resultAPI[questionNumber];\n      const hightestScore = 3;\n      switch (difficulty) {\n      case 'easy':\n        difficulty = 1;\n        break;\n      case 'medium':\n        difficulty = 2;\n        break;\n      case 'hard':\n        difficulty = hightestScore;\n        break;\n      default:\n        difficulty = 0;\n      }\n      const number = 10;\n      const newScore = number + (timer * difficulty);\n      setScore(newScore);\n    }\n  }\n\n  setNextQuestion = () => {\n    const { questionNumber } = this.state;\n    const numberOfQuestions = 4;\n    if (questionNumber < numberOfQuestions) {\n      this.setState({\n        isDisabled: false, timer: 30, questionNumber: questionNumber + 1,\n      }, this.createRandomOptions);\n    } else {\n      const { history } = this.props;\n      history.push('/feedback');\n    }\n  }\n\n  setButtonsToDefault = () => {\n    const parent = this.myRef.current;\n    const options = [...parent.children];\n    options.forEach((opt) => {\n      opt.disabled = false;\n      opt.classList.remove('red-border');\n      opt.classList.remove('green-border');\n    });\n    removeAnimation(parent);\n  }\n\n  render() {\n    const { resultAPI, questionNumber, timer, shuffledOptions, isDisabled } = this.state;\n\n    return (\n      <div className=\"game-page-container\">\n        <div className=\"quiz-container\">\n          <QuizHeader />\n          { resultAPI.length > 0 && (\n            <p data-testid=\"question-category\" className=\"category\">\n              {resultAPI[questionNumber].category}\n            </p>\n          )}\n          <div className=\"questions-container\">\n            <div className=\"timer-bar\" />\n            <div className=\"timer-number\">\n              { timer }\n            </div>\n            { resultAPI.length > 0 && (\n              <div className=\"centralize-question\">\n                <p data-testid=\"question-text\" className=\"question-text\">\n                  {he.decode(resultAPI[questionNumber].question)}\n                </p>\n                <div\n                  data-testid=\"answer-options\"\n                  ref={ this.myRef }\n                  className=\"answer-options\"\n                >\n                  { shuffledOptions }\n                </div>\n              </div>\n            )}\n          </div>\n          {isDisabled && (\n            <button\n              type=\"button\"\n              data-testid=\"btn-next\"\n              onClick={ this.setNextQuestion }\n              className=\"next-button\"\n            >\n              Next\n            </button>)}\n        </div>\n      </div>\n    );\n  }\n}\n\nGame.propTypes = {\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired,\n  }),\n}.isRequired;\n\nconst mapDispatchToProps = (dispatch) => ({\n  setScore: (score) => dispatch(setScoreAction(score)),\n});\n\nexport default connect(null, mapDispatchToProps)(Game);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport QuizHeader from '../components/QuizHeader';\nimport { createImageSrc } from '../functions/gameFunctions';\nimport { clearPlayer } from '../redux/actions';\n\nimport '../styles/feedback.css';\n\nclass Feedback extends React.Component {\n  componentDidMount() {\n    const { name, score, email } = this.props;\n    const myObj = { name, score, picture: createImageSrc(email) };\n\n    if (localStorage.getItem('ranking')) {\n      const dataArr = JSON.parse(localStorage.getItem('ranking'));\n      dataArr.push(myObj);\n      localStorage.setItem('ranking', JSON.stringify(dataArr));\n    } else {\n      localStorage.setItem('ranking', JSON.stringify([myObj]));\n    }\n  }\n\n  handleRedirectTo = (route) => {\n    const { history, clearState } = this.props;\n    if (route) {\n      history.push(`/${route}`);\n    } else {\n      history.push('/');\n    }\n    clearState();\n  }\n\n  render() {\n    const { assertions, score } = this.props;\n    const THREE = 3;\n    return (\n      <div className=\"feedback-page-container\">\n        <QuizHeader />\n        <div className=\"feedback-container\">\n          <p className=\"feedback-text\">\n            {assertions < THREE\n              ? (\n                <span\n                  data-testid=\"feedback-text\"\n                  className=\"bad-played\"\n                >\n                  Could be better...\n                </span>\n              )\n              : (\n                <span\n                  data-testid=\"feedback-text\"\n                  className=\"well-played\"\n                >\n                  Well Done!\n                </span>\n              )}\n          </p>\n          <div className=\"feedback-data-container\">\n            <div className=\"feedback-data\">\n              <p className=\"feedback-data-text\">Score:</p>\n              <div\n                className=\"feedback-data-number\"\n                data-testid=\"feedback-total-score\"\n              >\n                {score}\n              </div>\n            </div>\n            <div className=\"feedback-data\">\n              <p className=\"feedback-data-text\">Assertions:</p>\n              <p\n                className=\"feedback-data-number\"\n                data-testid=\"feedback-total-question\"\n              >\n                {assertions}\n              </p>\n            </div>\n          </div>\n          <div className=\"buttons-container\">\n            <button\n              type=\"button\"\n              data-testid=\"btn-play-again\"\n              className=\"feedback-button\"\n              onClick={ () => this.handleRedirectTo() }\n            >\n              Play Again\n            </button>\n            <button\n              type=\"button\"\n              data-testid=\"btn-ranking\"\n              className=\"feedback-button\"\n              onClick={ () => this.handleRedirectTo('ranking') }\n            >\n              Ranking\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  assertions: state.player.assertions,\n  score: state.player.score,\n  name: state.player.name,\n  email: state.player.gravatarEmail,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  clearState: () => dispatch(clearPlayer()),\n});\n\nFeedback.propTypes = {\n  history: PropTypes.shape({\n    push: PropTypes.func,\n  }).isRequired,\n  assertions: PropTypes.number.isRequired,\n  score: PropTypes.number.isRequired,\n  name: PropTypes.string.isRequired,\n  email: PropTypes.string.isRequired,\n  clearState: PropTypes.func.isRequired,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Feedback);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport '../styles/ranking.css';\n\nclass Ranking extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      playerInfos: [],\n    };\n  }\n\n  componentDidMount() {\n    this.getLocalStorage();\n  }\n\n  getLocalStorage = () => {\n    const playerInfos = JSON.parse(localStorage.getItem('ranking'));\n    const sortedInfos = playerInfos.sort((a, b) => b.score - a.score);\n    this.setState({ playerInfos: sortedInfos });\n  }\n\n  HandleClickBackToLogin = () => {\n    const { history } = this.props;\n    history.push('/');\n  };\n\n  render() {\n    const { playerInfos } = this.state;\n    return (\n      <section>\n        <div data-testid=\"ranking-title\" className=\"ranking-title\">\n          <h3>Ranking</h3>\n        </div>\n        <div className=\"box\">\n          { playerInfos.map((player, i) => (\n            <div className=\"list\" key={ i }>\n              <div className=\"imgBx\">\n                <img src={ player.picture } alt={ player.name } />\n              </div>\n              <div className=\"content\">\n                <h2 className=\"rank\">\n                  <small className=\"hashtag\">#</small>\n                  { i + 1 }\n                </h2>\n                <h4 data-testid={ `player-name-${i}` }>{ player.name }</h4>\n                <p data-testid={ `player-score-${i}` }>{ player.score }</p>\n              </div>\n            </div>\n          )) }\n        </div>\n        <button\n          type=\"button\"\n          data-testid=\"btn-go-home\"\n          className=\"home-button\"\n          onClick={ () => this.HandleClickBackToLogin() }\n        >\n          Voltar para Home\n        </button>\n      </section>\n    );\n  }\n}\n\nRanking.propTypes = {\n  history: PropTypes.shape({\n    push: PropTypes.func,\n  }).isRequired,\n};\n\nexport default Ranking;\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\n\nimport Configurações from './pages/Configurações';\nimport Login from './pages/Login';\nimport Game from './pages/Game';\nimport Feedback from './pages/Feedback';\nimport Ranking from './pages/Ranking';\n\nimport './App.css';\n\nexport default function App() {\n  return (\n    <div className=\"App\">\n      <Switch>\n        <Route exact path=\"/\" component={ Login } />\n        <Route path=\"/game\" component={ Game } />\n        <Route path=\"/Configurações\" component={ Configurações } />\n        <Route path=\"/feedback\" component={ Feedback } />\n        <Route path=\"/ranking\" component={ Ranking } />\n      </Switch>\n    </div>\n  );\n}\n","import { SET_USER_INFO, SET_SCORE, CLEAR_PLAYER } from '../actions';\n\nconst INITIAL_STATE = {\n  name: '',\n  assertions: 0,\n  score: 0,\n  gravatarEmail: '',\n};\n\nconst playerReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n  case SET_USER_INFO:\n    return {\n      ...state,\n      gravatarEmail: action.userInfo.email,\n      name: action.userInfo.name,\n    };\n  case SET_SCORE:\n    return {\n      ...state,\n      score: state.score + action.score,\n      assertions: state.assertions + 1,\n    };\n  case CLEAR_PLAYER:\n    return {\n      ...state,\n      name: '',\n      assertions: 0,\n      score: 0,\n      gravatarEmail: '',\n    };\n  default:\n    return state;\n  }\n};\n\nexport default playerReducer;\n","import { combineReducers } from 'redux';\nimport player from './userReducer';\n\nconst rootReducer = combineReducers({ player });\n\nexport default rootReducer;\n","import { legacy_createStore as createStore } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport rootReducer from '../reducer';\n\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(),\n);\n\nif (window.Cypress) {\n  window.store = store;\n}\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\n\nimport App from './App';\nimport store from './redux/store';\n\nReactDOM.render(\n  <BrowserRouter>\n    <Provider store={ store }>\n      <App />\n    </Provider>\n  </BrowserRouter>,\n\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}